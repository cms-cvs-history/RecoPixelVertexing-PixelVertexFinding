process PROD = {

  source = PoolSource {
    untracked vstring fileNames = {'file:ClustersToHits_30mu.root'}
    untracked int32 maxEvents = 1000
    untracked uint32 debugVerbosity = 0
    untracked bool   debugFlag     = true
  }

  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

  es_source = XMLIdealGeometryESSource {
    FileInPath GeometryConfiguration="Geometry/TrackerSimData/data/trackerSimConfiguration.xml"
    string rootNodeName = ""
  }
  es_module = TrackerGeometricDetESModule {}
  es_module = TrackerRecoGeometryESProducer {}
  es_module = TrackerDigiGeometryESModule {}

  es_module = PixelFitterByConformalMappingAndLineESProducer{ }
  es_module = PixelFitterByHelixProjectionsESProducer{ }

  module PixelTracks = PixelTrackProducer{
//    string Fitter = "PixelFitterByConformalMappingAndLine" 
    string Fitter = "PixelFitterByHelixProjections" 
  }

  module PixelVertexes = PixelVertexProducer{
    int32 Verbosity = 0
    string TrackCollection = "PixelTracks"
    string Finder = "DivisiveVertexFinder"
    bool UseError = true
    bool WtAverage = true
    double ZOffset = 5.0
    double ZSeparation = 0.05
    int32 NTrkMin = 5
    double PtMin = 1.0
    bool Method2 = true
  }

  module test = PixelVertexTest{
    string TrackCollection = "PixelTracks"
    untracked string OutputTree = "pixel_vertexes_30mu.root"
    untracked uint32 Verbosity = 0
  }
  path p = {PixelTracks, PixelVertexes, test}
}

